# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'firstDraft.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from ocel_converter import convertToOcelModel, OCEL_Model
from operators import manualMiner, matchMiner
import pickle


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):


        # url = "https://louis-herrmann-rwth-aachen-de.training.celonis.cloud"
        # api = "NWE2NjdjOGEtYTkyMS00NDYyLTk0M2EtZjFiYjdhZDA5MTYzOmZJSDIydFd3TEwrQkUwV2tBVkhtN0N5VFI1aHdWYVJ2TDJVUWpoL2U5cUE4"

        # data_pool = "OCEL_Pool1"
        # data_model = "OCEL_Model1"

        # self.ocel_model = convertToOcelModel(url, api, data_pool, data_model)

        # for development purposes
        with open('file.pkl', 'rb') as file:
            # Call load method to deserialze
            self.ocel_model = pickle.load(file)


        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        # start of code for side scroll area
        self.OCEL_list_scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.OCEL_list_scrollArea.setGeometry(QtCore.QRect(30, 20, 391, 581))
        self.OCEL_list_scrollArea.setWidgetResizable(True)
        self.OCEL_list_scrollArea.setObjectName("OCEL_list_scrollArea")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 375, 1018))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_3)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.OCEL_list_frame = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)

        self.OCEL_list_frame.setMinimumSize(QtCore.QSize(0, 150 * len(self.ocel_model.ocels)))

        self.OCEL_list_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.OCEL_list_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.OCEL_list_frame.setObjectName("OCEL_list_frame")

        self.sidebarTitlelabel = QtWidgets.QLabel(self.OCEL_list_frame)
        self.sidebarTitlelabel.setGeometry(QtCore.QRect(30, 10, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.sidebarTitlelabel.setFont(font)
        self.sidebarTitlelabel.setObjectName("sidebarTitlelabel")
        
        self.horizontalLayout_4.addWidget(self.OCEL_list_frame)
        self.OCEL_list_scrollArea.setWidget(self.scrollAreaWidgetContents_3)
        # end of code for side scroll area



        self.operatorFrame = QtWidgets.QFrame(self.centralwidget)
        self.operatorFrame.setGeometry(QtCore.QRect(450, 50, 751, 511))
        self.operatorFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.operatorFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.operatorFrame.setObjectName("operatorFrame")
        self.operatorTitleLabel = QtWidgets.QLabel(self.operatorFrame)
        self.operatorTitleLabel.setGeometry(QtCore.QRect(280, 20, 231, 41))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.operatorTitleLabel.setFont(font)
        self.operatorTitleLabel.setObjectName("operatorTitleLabel")

        self.operatorDescriptionLabel = QtWidgets.QLabel(self.operatorFrame)
        self.operatorDescriptionLabel.setEnabled(True)
        self.operatorDescriptionLabel.setGeometry(QtCore.QRect(60, 70, 611, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.operatorDescriptionLabel.setFont(font)
        self.operatorDescriptionLabel.setObjectName("operatorDescriptionLabel")
        self.operatorSelectorLabel_1 = QtWidgets.QLabel(self.operatorFrame)
        self.operatorSelectorLabel_1.setEnabled(True)
        self.operatorSelectorLabel_1.setGeometry(QtCore.QRect(60, 160, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.operatorSelectorLabel_1.setFont(font)
        self.operatorSelectorLabel_1.setObjectName("operatorSelectorLabel_1")
        self.operatorSelectorLabel_3 = QtWidgets.QLabel(self.operatorFrame)
        self.operatorSelectorLabel_3.setEnabled(True)
        self.operatorSelectorLabel_3.setGeometry(QtCore.QRect(60, 280, 311, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.operatorSelectorLabel_3.setFont(font)
        self.operatorSelectorLabel_3.setObjectName("operatorSelectorLabel_3")
        
        self.logSelectcomboBox1 = QtWidgets.QComboBox(self.operatorFrame)
        self.logSelectcomboBox1.setGeometry(QtCore.QRect(420, 160, 221, 31))
        self.logSelectcomboBox1.setObjectName("logSelectcomboBox1")

        self.logSelectcomboBox2 = QtWidgets.QComboBox(self.operatorFrame)
        self.logSelectcomboBox2.setGeometry(QtCore.QRect(420, 210, 221, 31))
        self.logSelectcomboBox2.setObjectName("logSelectcomboBox2")


        self.logSelectcomboBox1.activated.connect(self.initAttributes1)
        self.logSelectcomboBox2.activated.connect(self.initAttributes2)


        self.attrSelectcomboBox1 = QtWidgets.QComboBox(self.operatorFrame)
        self.attrSelectcomboBox1.setGeometry(QtCore.QRect(420, 280, 221, 31))
        self.attrSelectcomboBox1.setObjectName("attrSelectcomboBox1")

        self.attrSelectcomboBox2 = QtWidgets.QComboBox(self.operatorFrame)
        self.attrSelectcomboBox2.setGeometry(QtCore.QRect(420, 320, 221, 31))
        self.attrSelectcomboBox2.setObjectName("attrSelectcomboBox2")

        self.operatorAddButton = QtWidgets.QPushButton(self.operatorFrame)
        self.operatorAddButton.setGeometry(QtCore.QRect(80, 430, 231, 41))
        self.operatorAddButton.setObjectName("operatorAddButton")
        self.operatorAddButton.clicked.connect(self.addToLogs)

        self.operatorExportButton = QtWidgets.QPushButton(self.operatorFrame)
        self.operatorExportButton.setGeometry(QtCore.QRect(410, 430, 231, 41))
        self.operatorExportButton.setObjectName("operatorExportButton")
        
        self.operatorSelectorLabel_2 = QtWidgets.QLabel(self.operatorFrame)
        self.operatorSelectorLabel_2.setEnabled(True)
        self.operatorSelectorLabel_2.setGeometry(QtCore.QRect(60, 210, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.operatorSelectorLabel_2.setFont(font)
        self.operatorSelectorLabel_2.setObjectName("operatorSelectorLabel_2")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1052, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.operatorTitleLabel.setText(_translate("MainWindow", "Match Miner"))

        self.refreshSelection()

        self.operatorDescriptionLabel.setText(_translate("MainWindow", "Merge events across logs based on matching attribute(s)."))
        self.operatorSelectorLabel_1.setText(_translate("MainWindow", "Select first event log:"))
        self.operatorSelectorLabel_3.setText(_translate("MainWindow", "Select attribute(s) to match on:"))

        self.operatorAddButton.setText(_translate("MainWindow", "Add to event logs"))
        self.operatorExportButton.setText(_translate("MainWindow", "Export"))
        self.operatorSelectorLabel_2.setText(_translate("MainWindow", "Select second event log:"))


        # start for side scroll area
        self.ocelSideBarFrames = []
        for i in range(len(self.ocel_model.ocels.keys())):
            self.ocelSideBarFrames.append(QtWidgets.QFrame(self.OCEL_list_frame))
            height = i*120+60
            self.ocelSideBarFrames[i].setGeometry(QtCore.QRect(40, height, 280, 100))
            self.ocelSideBarFrames[i].setFrameShape(QtWidgets.QFrame.StyledPanel)
            self.ocelSideBarFrames[i].setFrameShadow(QtWidgets.QFrame.Raised)
            self.ocelSideBarFrames[i].setObjectName("OcelNameFrame_" + str(i))

            sidebarOCELTitle = QtWidgets.QLabel(self.ocelSideBarFrames[i])
            sidebarOCELTitle.setGeometry(QtCore.QRect(60, 10, 181, 21))
            font = QtGui.QFont()
            font.setPointSize(14)
            font.setBold(True)
            font.setWeight(75)
            sidebarOCELTitle.setFont(font)
            sidebarOCELTitle.setObjectName("sidebarTitlelabel")
            sidebarPushButtonView = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
            sidebarPushButtonView.setGeometry(QtCore.QRect(10, 50, 81, 25))
            sidebarPushButtonView.setObjectName("sidebarPushButtonView")
            sidebarPushButtonExport = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
            sidebarPushButtonExport.setGeometry(QtCore.QRect(100, 50, 81, 25))
            sidebarPushButtonExport.setObjectName("sidebarPushButtonExport")
            sidebarPushButtonDelete = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
            sidebarPushButtonDelete.setGeometry(QtCore.QRect(190, 50, 81, 25))
            sidebarPushButtonDelete.setObjectName("sidebarPushButtonDelete")

            sidebarPushButtonView.setText(_translate("MainWindow", "View"))
            sidebarPushButtonExport.setText(_translate("MainWindow", "Export"))
            sidebarPushButtonDelete.setText(_translate("MainWindow", "Delete"))
            sidebarOCELTitle.setText(_translate("MainWindow", list(self.ocel_model.ocels.keys())[i]))
        
        self.sidebarTitlelabel.setText(_translate("MainWindow", "Object-centric event logs"))

        # end for side scroll area

    def addToLogs(self):
        name1 = self.logSelectcomboBox1.currentText()
        name2 = self.logSelectcomboBox2.currentText()
        log1 = self.ocel_model.ocels[name1]
        log2 = self.ocel_model.ocels[name2]
        attr1 = self.attrSelectcomboBox1.currentText()
        attr2 = self.attrSelectcomboBox2.currentText()
        newLog = matchMiner(log1, log2, self.ocel_model.obj_relation, attr1, attr2)
        name = "MATCH_MINER (" + name1 + ", " + name2 + ")" + " on " + "(" + attr1 + ", " + attr2 + ")"
        self.ocel_model.addOCEL(name, newLog)

        self.refreshSelection(name)

    def initAttributes1(self):
        _translate = QtCore.QCoreApplication.translate
        attributes = self.ocel_model.ocels[self.logSelectcomboBox1.currentText()]["ocel:global-log"]["ocel:attribute-names"]
        self.attrSelectcomboBox1.clear()
        for i in range(len(attributes)):
            self.attrSelectcomboBox1.addItem("")
            self.attrSelectcomboBox1.setItemText(i, _translate("MainWindow", attributes[i]))

    def initAttributes2(self):
        _translate = QtCore.QCoreApplication.translate
        attributes = self.ocel_model.ocels[self.logSelectcomboBox2.currentText()]["ocel:global-log"]["ocel:attribute-names"]
        self.attrSelectcomboBox2.clear()
        for i in range(len(attributes)):
            self.attrSelectcomboBox2.addItem("")
            self.attrSelectcomboBox2.setItemText(i, _translate("MainWindow", attributes[i]))

    def refreshSelection(self, name=""):
        _translate = QtCore.QCoreApplication.translate

        self.logSelectcomboBox1.clear()
        self.logSelectcomboBox2.clear()

        for i in range(len(self.ocel_model.ocels.keys())):
            self.logSelectcomboBox1.addItem("")
            self.logSelectcomboBox2.addItem("")
            self.logSelectcomboBox1.setItemText(i, _translate("MainWindow", list(self.ocel_model.ocels.keys())[i]))
            self.logSelectcomboBox2.setItemText(i, _translate("MainWindow", list(self.ocel_model.ocels.keys())[i]))

        self.initAttributes1()
        self.initAttributes2()
        
        # only add new log to sidebar if we just applied some operator
        if name == "":
            return

        # start for side scroll area
        i = len(self.ocel_model.ocels) - 1
        self.ocelSideBarFrames.append(QtWidgets.QFrame(self.OCEL_list_frame))
        height = i*120+60
        self.ocelSideBarFrames[i].setGeometry(QtCore.QRect(40, height, 280, 100))
        self.ocelSideBarFrames[i].setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ocelSideBarFrames[i].setFrameShadow(QtWidgets.QFrame.Raised)
        self.ocelSideBarFrames[i].setObjectName("OcelNameFrame_" + str(i))

        sidebarOCELTitle = QtWidgets.QLabel(self.ocelSideBarFrames[i])
        sidebarOCELTitle.setGeometry(QtCore.QRect(60, 10, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        sidebarOCELTitle.setFont(font)
        sidebarOCELTitle.setObjectName("sidebarTitlelabel")
        sidebarPushButtonView = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
        sidebarPushButtonView.setGeometry(QtCore.QRect(10, 50, 81, 25))
        sidebarPushButtonView.setObjectName("sidebarPushButtonView")
        sidebarPushButtonExport = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
        sidebarPushButtonExport.setGeometry(QtCore.QRect(100, 50, 81, 25))
        sidebarPushButtonExport.setObjectName("sidebarPushButtonExport")
        sidebarPushButtonDelete = QtWidgets.QPushButton(self.ocelSideBarFrames[i])
        sidebarPushButtonDelete.setGeometry(QtCore.QRect(190, 50, 81, 25))
        sidebarPushButtonDelete.setObjectName("sidebarPushButtonDelete")

        sidebarPushButtonView.setText(_translate("MainWindow", "View"))
        sidebarPushButtonExport.setText(_translate("MainWindow", "Export"))
        sidebarPushButtonDelete.setText(_translate("MainWindow", "Delete"))
        sidebarOCELTitle.setText(_translate("MainWindow", name))
        
        self.ocelSideBarFrames[i].show()

        # update height of scroll area
        self.OCEL_list_frame.setMinimumSize(QtCore.QSize(0, 150 * len(self.ocel_model.ocels)))

        # end for side scroll area




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())



